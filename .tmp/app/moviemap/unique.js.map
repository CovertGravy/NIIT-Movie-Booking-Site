{"version":3,"sources":["app/moviemap/unique.js"],"names":["angular","module","filter","items","filterOn","isUndefined","isArray","hashCheck","newItems","extractValueToCompare","item","isObject","isString","forEach","valueToCheck","isDuplicate","i","length","equals","push"],"mappings":";;AAAA;;;;;;;AAOAA,QAAQC,MAAR,CAAe,YAAf,EAA6BC,MAA7B,CAAoC,QAApC,EAA8C,YAAY;;AAExD,SAAO,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;;AAEhC,QAAIA,aAAa,KAAjB,EAAwB;AACtB,aAAOD,KAAP;AACD;;AAED,QAAI,CAACC,YAAYJ,QAAQK,WAAR,CAAoBD,QAApB,CAAb,KAA+CJ,QAAQM,OAAR,CAAgBH,KAAhB,CAAnD,EAA2E;AACzE,UAAII,YAAY,EAAhB;AAAA,UAAoBC,WAAW,EAA/B;;AAEA,UAAIC,wBAAwB,SAAxBA,qBAAwB,CAAUC,IAAV,EAAgB;AAC1C,YAAIV,QAAQW,QAAR,CAAiBD,IAAjB,KAA0BV,QAAQY,QAAR,CAAiBR,QAAjB,CAA9B,EAA0D;AACxD,iBAAOM,KAAKN,QAAL,CAAP;AACD,SAFD,MAEO;AACL,iBAAOM,IAAP;AACD;AACF,OAND;;AAQAV,cAAQa,OAAR,CAAgBV,KAAhB,EAAuB,UAAUO,IAAV,EAAgB;AACrC,YAAII,YAAJ;AAAA,YAAkBC,cAAc,KAAhC;;AAEA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,SAASS,MAA7B,EAAqCD,GAArC,EAA0C;AACxC,cAAIhB,QAAQkB,MAAR,CAAeT,sBAAsBD,SAASQ,CAAT,CAAtB,CAAf,EAAmDP,sBAAsBC,IAAtB,CAAnD,CAAJ,EAAqF;AACnFK,0BAAc,IAAd;AACA;AACD;AACF;AACD,YAAI,CAACA,WAAL,EAAkB;AAChBP,mBAASW,IAAT,CAAcT,IAAd;AACD;AAEF,OAbD;AAcAP,cAAQK,QAAR;AACD;AACD,WAAOL,KAAP;AACD,GAlCD;AAmCD,CArCD","file":"unique.js","sourcesContent":["/**\n * Filters out all duplicate items from an array by checking the specified key\n * @param [key] {string} the name of the attribute of each object to compare for uniqueness\n if the key is empty, the entire object will be compared\n if the key === false then no filtering will be performed\n * @return {array}\n */\nangular.module('ui.filters').filter('unique', function () {\n\n  return function (items, filterOn) {\n\n    if (filterOn === false) {\n      return items;\n    }\n\n    if ((filterOn || angular.isUndefined(filterOn)) && angular.isArray(items)) {\n      var hashCheck = {}, newItems = [];\n\n      var extractValueToCompare = function (item) {\n        if (angular.isObject(item) && angular.isString(filterOn)) {\n          return item[filterOn];\n        } else {\n          return item;\n        }\n      };\n\n      angular.forEach(items, function (item) {\n        var valueToCheck, isDuplicate = false;\n\n        for (var i = 0; i < newItems.length; i++) {\n          if (angular.equals(extractValueToCompare(newItems[i]), extractValueToCompare(item))) {\n            isDuplicate = true;\n            break;\n          }\n        }\n        if (!isDuplicate) {\n          newItems.push(item);\n        }\n\n      });\n      items = newItems;\n    }\n    return items;\n  };\n});\n"]}